{
  "kind" : "Program",
  "location" : [ 1, 1, 26, 1 ],
  "declarations" : [ {
    "kind" : "VarDef",
    "location" : [ 1, 1, 1, 11 ],
    "var" : {
      "kind" : "TypedVar",
      "location" : [ 1, 1, 1, 6 ],
      "identifier" : {
        "kind" : "Identifier",
        "location" : [ 1, 1, 1, 1 ],
        "name" : "s"
      },
      "type" : {
        "kind" : "ClassType",
        "location" : [ 1, 4, 1, 6 ],
        "className" : "str"
      }
    },
    "value" : {
      "kind" : "StringLiteral",
      "location" : [ 1, 10, 1, 11 ],
      "inferredType" : {
        "kind" : "ClassValueType",
        "className" : "str"
      },
      "value" : ""
    }
  }, {
    "kind" : "VarDef",
    "location" : [ 2, 1, 2, 12 ],
    "var" : {
      "kind" : "TypedVar",
      "location" : [ 2, 1, 2, 7 ],
      "identifier" : {
        "kind" : "Identifier",
        "location" : [ 2, 1, 2, 2 ],
        "name" : "se"
      },
      "type" : {
        "kind" : "ClassType",
        "location" : [ 2, 5, 2, 7 ],
        "className" : "str"
      }
    },
    "value" : {
      "kind" : "StringLiteral",
      "location" : [ 2, 11, 2, 12 ],
      "inferredType" : {
        "kind" : "ClassValueType",
        "className" : "str"
      },
      "value" : ""
    }
  }, {
    "kind" : "VarDef",
    "location" : [ 3, 1, 3, 15 ],
    "var" : {
      "kind" : "TypedVar",
      "location" : [ 3, 1, 3, 8 ],
      "identifier" : {
        "kind" : "Identifier",
        "location" : [ 3, 1, 3, 1 ],
        "name" : "l"
      },
      "type" : {
        "kind" : "ListType",
        "location" : [ 3, 4, 3, 8 ],
        "elementType" : {
          "kind" : "ClassType",
          "location" : [ 3, 5, 3, 7 ],
          "className" : "int"
        }
      }
    },
    "value" : {
      "kind" : "NoneLiteral",
      "location" : [ 3, 12, 3, 15 ],
      "inferredType" : {
        "kind" : "ClassValueType",
        "className" : "<None>"
      }
    }
  }, {
    "kind" : "VarDef",
    "location" : [ 4, 1, 4, 11 ],
    "var" : {
      "kind" : "TypedVar",
      "location" : [ 4, 1, 4, 7 ],
      "identifier" : {
        "kind" : "Identifier",
        "location" : [ 4, 1, 4, 2 ],
        "name" : "le"
      },
      "type" : {
        "kind" : "ClassType",
        "location" : [ 4, 5, 4, 7 ],
        "className" : "int"
      }
    },
    "value" : {
      "kind" : "IntegerLiteral",
      "location" : [ 4, 11, 4, 11 ],
      "inferredType" : {
        "kind" : "ClassValueType",
        "className" : "int"
      },
      "value" : 0
    }
  }, {
    "kind" : "VarDef",
    "location" : [ 5, 1, 5, 15 ],
    "var" : {
      "kind" : "TypedVar",
      "location" : [ 5, 1, 5, 7 ],
      "identifier" : {
        "kind" : "Identifier",
        "location" : [ 5, 1, 5, 1 ],
        "name" : "k"
      },
      "type" : {
        "kind" : "ClassType",
        "location" : [ 5, 4, 5, 7 ],
        "className" : "bool"
      }
    },
    "value" : {
      "kind" : "BooleanLiteral",
      "location" : [ 5, 11, 5, 15 ],
      "inferredType" : {
        "kind" : "ClassValueType",
        "className" : "bool"
      },
      "value" : false
    }
  }, {
    "kind" : "FuncDef",
    "location" : [ 6, 1, 7, 10 ],
    "name" : {
      "kind" : "Identifier",
      "location" : [ 6, 5, 6, 5 ],
      "name" : "f"
    },
    "params" : [ ],
    "returnType" : {
      "kind" : "ClassType",
      "location" : [ 6, 8, 6, 8 ],
      "className" : "<None>"
    },
    "declarations" : [ ],
    "statements" : [ {
      "kind" : "ExprStmt",
      "location" : [ 7, 5, 7, 9 ],
      "expr" : {
        "kind" : "BinaryExpr",
        "location" : [ 7, 5, 7, 9 ],
        "errorMsg" : "Cannot apply operator `+` on types `int` and `str`",
        "inferredType" : {
          "kind" : "ClassValueType",
          "className" : "int"
        },
        "left" : {
          "kind" : "IntegerLiteral",
          "location" : [ 7, 5, 7, 5 ],
          "inferredType" : {
            "kind" : "ClassValueType",
            "className" : "int"
          },
          "value" : 1
        },
        "operator" : "+",
        "right" : {
          "kind" : "StringLiteral",
          "location" : [ 7, 7, 7, 9 ],
          "inferredType" : {
            "kind" : "ClassValueType",
            "className" : "str"
          },
          "value" : "2"
        }
      }
    } ]
  } ],
  "statements" : [ {
    "kind" : "ForStmt",
    "location" : [ 9, 1, 12, 0 ],
    "errorMsg" : "Expected type `bool`; got type `int`",
    "identifier" : {
      "kind" : "Identifier",
      "location" : [ 9, 5, 9, 5 ],
      "name" : "k"
    },
    "iterable" : {
      "kind" : "Identifier",
      "location" : [ 9, 10, 9, 10 ],
      "inferredType" : {
        "kind" : "ListValueType",
        "elementType" : {
          "kind" : "ClassValueType",
          "className" : "int"
        }
      },
      "name" : "l"
    },
    "body" : [ {
      "kind" : "ExprStmt",
      "location" : [ 10, 5, 10, 9 ],
      "expr" : {
        "kind" : "BinaryExpr",
        "location" : [ 10, 5, 10, 9 ],
        "errorMsg" : "Cannot apply operator `+` on types `int` and `str`",
        "inferredType" : {
          "kind" : "ClassValueType",
          "className" : "int"
        },
        "left" : {
          "kind" : "IntegerLiteral",
          "location" : [ 10, 5, 10, 5 ],
          "inferredType" : {
            "kind" : "ClassValueType",
            "className" : "int"
          },
          "value" : 1
        },
        "operator" : "+",
        "right" : {
          "kind" : "StringLiteral",
          "location" : [ 10, 7, 10, 9 ],
          "inferredType" : {
            "kind" : "ClassValueType",
            "className" : "str"
          },
          "value" : "2"
        }
      }
    } ]
  }, {
    "kind" : "ForStmt",
    "location" : [ 12, 1, 15, 0 ],
    "errorMsg" : "Not a variable: g",
    "identifier" : {
      "kind" : "Identifier",
      "location" : [ 12, 5, 12, 5 ],
      "name" : "g"
    },
    "iterable" : {
      "kind" : "Identifier",
      "location" : [ 12, 10, 12, 10 ],
      "inferredType" : {
        "kind" : "ListValueType",
        "elementType" : {
          "kind" : "ClassValueType",
          "className" : "int"
        }
      },
      "name" : "l"
    },
    "body" : [ {
      "kind" : "ExprStmt",
      "location" : [ 13, 5, 13, 9 ],
      "expr" : {
        "kind" : "BinaryExpr",
        "location" : [ 13, 5, 13, 9 ],
        "errorMsg" : "Cannot apply operator `+` on types `int` and `str`",
        "inferredType" : {
          "kind" : "ClassValueType",
          "className" : "int"
        },
        "left" : {
          "kind" : "IntegerLiteral",
          "location" : [ 13, 5, 13, 5 ],
          "inferredType" : {
            "kind" : "ClassValueType",
            "className" : "int"
          },
          "value" : 1
        },
        "operator" : "+",
        "right" : {
          "kind" : "StringLiteral",
          "location" : [ 13, 7, 13, 9 ],
          "inferredType" : {
            "kind" : "ClassValueType",
            "className" : "str"
          },
          "value" : "2"
        }
      }
    } ]
  }, {
    "kind" : "ForStmt",
    "location" : [ 15, 1, 18, 0 ],
    "errorMsg" : "Not a variable: f",
    "identifier" : {
      "kind" : "Identifier",
      "location" : [ 15, 5, 15, 5 ],
      "name" : "f"
    },
    "iterable" : {
      "kind" : "Identifier",
      "location" : [ 15, 10, 15, 10 ],
      "inferredType" : {
        "kind" : "ListValueType",
        "elementType" : {
          "kind" : "ClassValueType",
          "className" : "int"
        }
      },
      "name" : "l"
    },
    "body" : [ {
      "kind" : "ExprStmt",
      "location" : [ 16, 5, 16, 9 ],
      "expr" : {
        "kind" : "BinaryExpr",
        "location" : [ 16, 5, 16, 9 ],
        "errorMsg" : "Cannot apply operator `+` on types `int` and `str`",
        "inferredType" : {
          "kind" : "ClassValueType",
          "className" : "int"
        },
        "left" : {
          "kind" : "IntegerLiteral",
          "location" : [ 16, 5, 16, 5 ],
          "inferredType" : {
            "kind" : "ClassValueType",
            "className" : "int"
          },
          "value" : 1
        },
        "operator" : "+",
        "right" : {
          "kind" : "StringLiteral",
          "location" : [ 16, 7, 16, 9 ],
          "inferredType" : {
            "kind" : "ClassValueType",
            "className" : "str"
          },
          "value" : "2"
        }
      }
    } ]
  }, {
    "kind" : "ForStmt",
    "location" : [ 18, 1, 21, 0 ],
    "errorMsg" : "Expected type `str`; got type `int`",
    "identifier" : {
      "kind" : "Identifier",
      "location" : [ 18, 5, 18, 6 ],
      "name" : "se"
    },
    "iterable" : {
      "kind" : "Identifier",
      "location" : [ 18, 11, 18, 11 ],
      "inferredType" : {
        "kind" : "ListValueType",
        "elementType" : {
          "kind" : "ClassValueType",
          "className" : "int"
        }
      },
      "name" : "l"
    },
    "body" : [ {
      "kind" : "ExprStmt",
      "location" : [ 19, 5, 19, 9 ],
      "expr" : {
        "kind" : "BinaryExpr",
        "location" : [ 19, 5, 19, 9 ],
        "errorMsg" : "Cannot apply operator `+` on types `int` and `str`",
        "inferredType" : {
          "kind" : "ClassValueType",
          "className" : "int"
        },
        "left" : {
          "kind" : "IntegerLiteral",
          "location" : [ 19, 5, 19, 5 ],
          "inferredType" : {
            "kind" : "ClassValueType",
            "className" : "int"
          },
          "value" : 1
        },
        "operator" : "+",
        "right" : {
          "kind" : "StringLiteral",
          "location" : [ 19, 7, 19, 9 ],
          "inferredType" : {
            "kind" : "ClassValueType",
            "className" : "str"
          },
          "value" : "2"
        }
      }
    } ]
  }, {
    "kind" : "ForStmt",
    "location" : [ 21, 1, 24, 0 ],
    "errorMsg" : "Expected type `[int]`; got type `str`",
    "identifier" : {
      "kind" : "Identifier",
      "location" : [ 21, 5, 21, 5 ],
      "name" : "l"
    },
    "iterable" : {
      "kind" : "Identifier",
      "location" : [ 21, 10, 21, 10 ],
      "inferredType" : {
        "kind" : "ClassValueType",
        "className" : "str"
      },
      "name" : "s"
    },
    "body" : [ {
      "kind" : "ExprStmt",
      "location" : [ 22, 5, 22, 9 ],
      "expr" : {
        "kind" : "BinaryExpr",
        "location" : [ 22, 5, 22, 9 ],
        "errorMsg" : "Cannot apply operator `+` on types `int` and `str`",
        "inferredType" : {
          "kind" : "ClassValueType",
          "className" : "int"
        },
        "left" : {
          "kind" : "IntegerLiteral",
          "location" : [ 22, 5, 22, 5 ],
          "inferredType" : {
            "kind" : "ClassValueType",
            "className" : "int"
          },
          "value" : 1
        },
        "operator" : "+",
        "right" : {
          "kind" : "StringLiteral",
          "location" : [ 22, 7, 22, 9 ],
          "inferredType" : {
            "kind" : "ClassValueType",
            "className" : "str"
          },
          "value" : "2"
        }
      }
    } ]
  }, {
    "kind" : "ForStmt",
    "location" : [ 24, 1, 26, 1 ],
    "errorMsg" : "Cannot iterate over value of type `bool`",
    "identifier" : {
      "kind" : "Identifier",
      "location" : [ 24, 5, 24, 5 ],
      "name" : "f"
    },
    "iterable" : {
      "kind" : "Identifier",
      "location" : [ 24, 10, 24, 10 ],
      "inferredType" : {
        "kind" : "ClassValueType",
        "className" : "bool"
      },
      "name" : "k"
    },
    "body" : [ {
      "kind" : "ExprStmt",
      "location" : [ 25, 5, 25, 9 ],
      "expr" : {
        "kind" : "BinaryExpr",
        "location" : [ 25, 5, 25, 9 ],
        "errorMsg" : "Cannot apply operator `+` on types `int` and `str`",
        "inferredType" : {
          "kind" : "ClassValueType",
          "className" : "int"
        },
        "left" : {
          "kind" : "IntegerLiteral",
          "location" : [ 25, 5, 25, 5 ],
          "inferredType" : {
            "kind" : "ClassValueType",
            "className" : "int"
          },
          "value" : 1
        },
        "operator" : "+",
        "right" : {
          "kind" : "StringLiteral",
          "location" : [ 25, 7, 25, 9 ],
          "inferredType" : {
            "kind" : "ClassValueType",
            "className" : "str"
          },
          "value" : "2"
        }
      }
    } ]
  } ],
  "errors" : {
    "errors" : [ {
      "kind" : "CompilerError",
      "location" : [ 7, 5, 7, 9 ],
      "message" : "Cannot apply operator `+` on types `int` and `str`"
    }, {
      "kind" : "CompilerError",
      "location" : [ 9, 1, 12, 0 ],
      "message" : "Expected type `bool`; got type `int`"
    }, {
      "kind" : "CompilerError",
      "location" : [ 10, 5, 10, 9 ],
      "message" : "Cannot apply operator `+` on types `int` and `str`"
    }, {
      "kind" : "CompilerError",
      "location" : [ 12, 1, 15, 0 ],
      "message" : "Not a variable: g"
    }, {
      "kind" : "CompilerError",
      "location" : [ 13, 5, 13, 9 ],
      "message" : "Cannot apply operator `+` on types `int` and `str`"
    }, {
      "kind" : "CompilerError",
      "location" : [ 15, 1, 18, 0 ],
      "message" : "Not a variable: f"
    }, {
      "kind" : "CompilerError",
      "location" : [ 16, 5, 16, 9 ],
      "message" : "Cannot apply operator `+` on types `int` and `str`"
    }, {
      "kind" : "CompilerError",
      "location" : [ 18, 1, 21, 0 ],
      "message" : "Expected type `str`; got type `int`"
    }, {
      "kind" : "CompilerError",
      "location" : [ 19, 5, 19, 9 ],
      "message" : "Cannot apply operator `+` on types `int` and `str`"
    }, {
      "kind" : "CompilerError",
      "location" : [ 21, 1, 24, 0 ],
      "message" : "Expected type `[int]`; got type `str`"
    }, {
      "kind" : "CompilerError",
      "location" : [ 22, 5, 22, 9 ],
      "message" : "Cannot apply operator `+` on types `int` and `str`"
    }, {
      "kind" : "CompilerError",
      "location" : [ 24, 1, 26, 1 ],
      "message" : "Cannot iterate over value of type `bool`"
    }, {
      "kind" : "CompilerError",
      "location" : [ 25, 5, 25, 9 ],
      "message" : "Cannot apply operator `+` on types `int` and `str`"
    } ],
    "kind" : "Errors",
    "location" : [ 0, 0, 0, 0 ]
  }
}